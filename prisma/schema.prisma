generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  name      String
  email     String  @unique
  password  String
  tasks     Task[]
  createdAt DateTime @default(now())
}

model Task {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  priority    Priority  @default(MEDIUM)
  status      Status    @default(PENDING)
  deadline    DateTime?
  isFavorite  Boolean   @default(false)
  isArchived  Boolean   @default(false)
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  categoryId  Int?
  category    Category? @relation(fields: [categoryId], references: [id])
  labels      Label[]   @relation("TaskLabels")
  comments    Comment[]
  subtasks    Task[]    @relation("SubTasks")
  parentTask  Task?     @relation("SubTasks", fields: [parentTaskId], references: [id])
  parentTaskId Int?

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Category {
  id     Int    @id @default(autoincrement())
  name   String @unique
  tasks  Task[]
}

model Label {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  tasks  Task[]  @relation("TaskLabels")
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  taskId    Int
  task      Task     @relation(fields: [taskId], references: [id])
  createdAt DateTime @default(now())
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum Status {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

